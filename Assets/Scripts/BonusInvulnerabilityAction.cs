using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace SpaceShooter
{
    public class BonusInvulnerabilityAction : MonoBehaviour
    {

        #region Properties and Components

        /// <summary>
        /// Ссылка на корабль.
        /// </summary>
        private SpaceShip m_SpaceShip;

        /// <summary>
        /// Внутренный таймер.
        /// </summary>
        private Timer m_Timer;

        #endregion


        #region Unity Events

        private void FixedUpdate()
        {
            // Проверка на null.
            if (m_SpaceShip == null || m_Timer == null) return;

            // Даётся неуязвимость.
            m_SpaceShip.GetInvulnerability(true);

            // Обновляется таймер
            m_Timer.UpdateTimer();

            // При окончании бонуса снимает неуязвимость и уничтожается.
            if (m_Timer.IsFinished)
            {
                m_SpaceShip.GetInvulnerability(false);
                Destroy(gameObject);
            }
        }

        #endregion


        #region Public API

        /// <summary>
        /// Метод, настраивающий бонус.
        /// </summary>
        /// <param name="ship">Корабль, получающий бонус.</param>
        /// <param name="time">Время действия бонуса.</param>
        public void TuneBonus(SpaceShip ship, float time)
        {
            // Задаётся корабль и активируется таймер. Проверяет, есть ли у игрока неуязвимость. Если есть - бонус уничтожается.
            m_SpaceShip = ship;
            if (ship.IsIndestructibly && ship.InvulnerabilityBonusIsActive == false) Destroy(gameObject);
            m_Timer = new Timer(time, false);
        }

        #endregion

    }
}